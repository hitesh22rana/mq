// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hitesh22rana/mq/pkg/storage (interfaces: Storage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// ChannelExists mocks base method.
func (m *MockStorage) ChannelExists(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChannelExists", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ChannelExists indicates an expected call of ChannelExists.
func (mr *MockStorageMockRecorder) ChannelExists(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChannelExists", reflect.TypeOf((*MockStorage)(nil).ChannelExists), arg0)
}

// CreateChannel mocks base method.
func (m *MockStorage) CreateChannel(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateChannel", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateChannel indicates an expected call of CreateChannel.
func (mr *MockStorageMockRecorder) CreateChannel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateChannel", reflect.TypeOf((*MockStorage)(nil).CreateChannel), arg0)
}

// GetMessages mocks base method.
func (m *MockStorage) GetMessages(arg0, arg1 string, arg2 uint64) ([]interface{}, uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessages", arg0, arg1, arg2)
	ret0, _ := ret[0].([]interface{})
	ret1, _ := ret[1].(uint64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetMessages indicates an expected call of GetMessages.
func (mr *MockStorageMockRecorder) GetMessages(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessages", reflect.TypeOf((*MockStorage)(nil).GetMessages), arg0, arg1, arg2)
}

// RemoveChannelFromSubscriberMap mocks base method.
func (m *MockStorage) RemoveChannelFromSubscriberMap(arg0, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveChannelFromSubscriberMap", arg0, arg1)
}

// RemoveChannelFromSubscriberMap indicates an expected call of RemoveChannelFromSubscriberMap.
func (mr *MockStorageMockRecorder) RemoveChannelFromSubscriberMap(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveChannelFromSubscriberMap", reflect.TypeOf((*MockStorage)(nil).RemoveChannelFromSubscriberMap), arg0, arg1)
}

// SaveMessage mocks base method.
func (m *MockStorage) SaveMessage(arg0 string, arg1 interface{}) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveMessage", arg0, arg1)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveMessage indicates an expected call of SaveMessage.
func (mr *MockStorageMockRecorder) SaveMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveMessage", reflect.TypeOf((*MockStorage)(nil).SaveMessage), arg0, arg1)
}
